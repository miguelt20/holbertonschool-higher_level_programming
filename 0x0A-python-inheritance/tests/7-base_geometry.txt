Using ''integer_validator''
--------------------------------------------------
        >>> BaseGeometry = __import__('7-base_geometry').BaseGeometry

        >>> bg = BaseGeometry()

        >>> bg.area()
        Traceback (most recent call last):
        ...
        Exception: area() is not implemented

        >>> bg.integer_validator("age", 17)

        >>> bg.integer_validator("age", "high")
        Traceback (most recent call last):
        ...
        TypeError: age must be an integer

        >>> bg.integer_validator("total", -5)
        Traceback (most recent call last):
        ...
        ValueError: total must be greater than 0


        >>> bg.integer_validator("way", 0)
        Traceback (most recent call last):
        ...
        ValueError: way must be greater than 0

        >>> bg.integer_validator("string", None)
        Traceback (most recent call last):
        ...
        TypeError: string must be an integer

        >>> bg.integer_validator("number", [3])
        Traceback (most recent call last):
        ...
        TypeError: number must be an integer

        >>> bg.integer_validator("number", (1, 2))
        Traceback (most recent call last):
        ...
        TypeError: number must be an integer

        >>> bg.integer_validator("number", (1, 2))
        Traceback (most recent call last):
        ...
        TypeError: number must be an integer

        >>> bg.integer_validator("number", True)
        Traceback (most recent call last):
        ...
        TypeError: number must be an integer

        >>> bg.integer_validator("number", {1, 2})
        Traceback (most recent call last):
        ...
        TypeError: number must be an integer

        >>> bg.integer_validator()
        Traceback (most recent call last):
        ...
        TypeError: integer_validator() missing 2 required positional arguments: 'name' and 'value'

        >>> bg.integer_validator("str")
        Traceback (most recent call last):
        ...
        TypeError: integer_validator() missing 1 required positional argument: 'value'